
PERIOD = "PERIOD"
CHAR_PERIOD = "."

FORWARD_SLASH = "FORWARDSLASH"
CHAR_FORWARD_SLASH = "/"

BACKWARD_SLASH = "BACKWARDSLASH"
CHAR_BACKWARD_SLASH = "\\"

ASTRICKS = "ASTRICKS"
CHAR_ASTRICKS = "*"

COLUMN = "COLUMN"
CHAR_COLUMN = ":"

SEMICOLUMN = "SEMICOLUMN"
CHAR_SEMICOLUMN = ";"

SPACE = "SPACE"
CHAR_SPACE = " "

# [ ] ( ) { } < >
LEFT_BRACKET = "LEFTBRACKET"
CHAR_LEFT_BRACKET = "["

RIGHT_BRACKET = "RIGHTBRACKET"
CHAR_RIGHT_BRACKET = "]"

LEFT_PARANTHASES = "LEFTPARANTAHSES"
CHAR_LEFT_PARANTHASES = "("

RIGHT_PARANTHASES = "RIGHTPARANTHASES"
CHAR_RIGHT_PARANTHASES = ")"

LEFT_CURLY_BRACKET = "LEFTCURLYBRACKET"
CHAR_LEFT_CURLY_BRACKET = "{"

RIGHT_CURLY_BRACKET = "RIGHTCURLYBRACKET"
CHAR_RIGHT_CURLY_BRACKET = "}"

LESS_THAN = "LESS_THAN"
CHAR_LESS_THAN = "<"

GREATER_THAN = "GREATERTHAN"
CHAR_GREATER_THAN = ">"

# Tuples of symbol/char sets
TUPLE_BRACKETS = (CHAR_LEFT_BRACKET, CHAR_RIGHT_BRACKET)
TUPLE_PARANTAHSES = (CHAR_LEFT_PARANTHASES, CHAR_RIGHT_PARANTHASES)
TUPLE_CURLY_BRACKETS = (CHAR_LEFT_CURLY_BRACKET, CHAR_RIGHT_CURLY_BRACKET)
TUPLE_ANGLE_BRACKETS = (CHAR_LESS_THAN, CHAR_GREATER_THAN)

# Semi-column must come before column, or it will parse semi-column as column.
LIST = [(PERIOD, CHAR_PERIOD), (FORWARD_SLASH, CHAR_FORWARD_SLASH), (BACKWARD_SLASH, CHAR_BACKWARD_SLASH),
        (ASTRICKS, CHAR_ASTRICKS),  (SEMICOLUMN, CHAR_SEMICOLUMN), (COLUMN, CHAR_COLUMN), (SPACE, CHAR_SPACE)
        ]
